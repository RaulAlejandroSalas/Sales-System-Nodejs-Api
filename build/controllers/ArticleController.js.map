{"version":3,"sources":["../../src/controllers/ArticleController.js"],"names":["add","req","res","next","models","Article","create","body","resp","status","send","message","query","findById","_id","id","populate","name","console","log","queryBarCode","code","list","pattern","filter","find","$or","RegExp","createdAt","sort","update","findByIdAndUpdate","category","sale_price","stock","description","remove","findOneAndRemove","activate","state","deactivate"],"mappings":"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","file":"ArticleController.js","sourcesContent":["import models from '../models';\nexport default{\n    add: async (req,res,next)=>{\n        try {\n            const resp = await models.Article.create(req.body);\n            res.status(201).send(resp);\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Inserting a new Article with Body: ${req.body}`\n            })\n            next(error);            \n        }\n    },\n    query:async (req,res,next)=>{\n        try {\n            const resp = await models.Article.findById({_id:req.query.id})\n                                             .populate('category',{name:1}) \n            console.log(resp);\n            if(!resp){\n                res.status(404).send({message: `The Article not exist with the Query: ${req.query.id}`})\n            }else{\n                res.status(200).send(resp);\n            }\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Executing the Query ${req.query.id}`\n            })\n            next(error);            \n        }\n    },\n    queryBarCode:async (req,res,next)=>{\n        try {\n            const resp = await models.Article.findById({code:req.query.code})\n                                             .populate('category',{name:1}) \n            if(!resp){\n                res.status(404).send({message: `The Article not exist with the Query: ${req.query.code}`})\n            }else{\n                res.status(200).send(resp);\n            }\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Executing the Query ${req.query.code}`\n            })\n            next(error);            \n        }\n    },\n    list:async (req,res,next)=>{\n        try {\n            let pattern = req.query.filter;\n            const resp = await models.Article.find(\n                                                {$or:[\n                                                {'name': new RegExp(pattern,'i')},{'description': new RegExp(pattern,'i')}]},\n                                                {createdAt:0})\n                                              .populate('category',{name:1})  \n                                              .sort({'createdAt':-1})\n            res.status(200).send(resp);\n        } catch (error) {\n            res.status(500).send({\n                message: `Not Exists Articles in the Database...`\n            })\n            next(error);            \n        }  \n    },\n    update:async (req,res,next)=>{\n        try {\n            const resp = await models.Article.findByIdAndUpdate({_id:req.body.id},\n                {\n                   category: req.body.category,\n                   name:req.body.name,\n                   sale_price:req.body.sale_price,\n                   code: req.body.code,\n                   stock: req.body.stock, \n                   description:req.body.description,\n                }\n            )\n            res.status(200).send(resp);\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Updating a Article with id:  ${req.body.id}`\n            })\n            next(error);            \n        }\n    },\n    remove:async (req,res,next)=>{\n        try {\n            const resp = await models.Article.findOneAndRemove({_id:req.body.id})\n            res.status(200).send(resp);\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Deleting a Article with id: ${req.body.id}`\n            })\n            next(error);            \n        }              \n    },\n    activate:async (req,res,next)=>{\n        try {\n            const resp = await models.Article.findByIdAndUpdate({_id:req.body.id},{state:1});\n            res.status(201).send(resp);\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Activating a Article with id: ${req.body.id}`\n            })\n            next(error);            \n        }   \n    },\n    deactivate:async (req,res,next)=>{\n        try {\n            const resp = await models.Article.findByIdAndUpdate({_id:req.body.id},{state:0});\n            res.status(201).send(resp);\n        } catch (error) {\n            res.status(500).send({\n                message: `Error Deactivating a Article with id: ${req.body.id}`\n            })\n            next(error);            \n        }   \n    }\n}"]}