{"version":3,"sources":["../src/index.js"],"names":["mongoose","Promise","global","dbURL","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","error","app","use","express","json","urlencoded","extended","static","path","join","__dirname","set","process","env","PORT","routes","get","req","res","send","listen"],"mappings":";;AAAA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;AAIAA,mBAASC,OAAT,GAAmBC,OAAOD,OAA1B;AACA,IAAME,QAAQ,uGAAd;AACAH,mBAASI,OAAT,CAAiBD,KAAjB,EAAwB,EAACE,iBAAiB,IAAlB,EAAwBC,oBAAoB,IAA5C,EAAxB,EACSC,IADT,CACc;AAAA,SAAIC,QAAQC,GAAR,CAAY,uCAAZ,CAAJ;AAAA,CADd,EAESC,KAFT,CAEeF,QAAQG,KAFvB;;AAIA,IAAMC,MAAM,wBAAZ;;AAEA;;;;AAIAA,IAAIC,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAD,IAAIC,GAAJ,CAAQ,qBAAR;AACAD,IAAIC,GAAJ,CAAQC,kBAAQC,IAAR,EAAR;AACAH,IAAIC,GAAJ,CAAQC,kBAAQE,UAAR,CAAmB,EAACC,UAAS,IAAV,EAAnB,CAAR;AACAL,IAAIC,GAAJ,CAAQC,kBAAQI,MAAR,CAAeC,eAAKC,IAAL,CAAUC,SAAV,EAAoB,QAApB,CAAf,CAAR;;AAEA;;;AAGAT,IAAIU,GAAJ,CAAQ,MAAR,EAAeC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAnC;;AAEA;;;;AAIAb,IAAIC,GAAJ,CAAQ,MAAR,EAAea,gBAAf;AACA;;;;AAIAd,IAAIe,GAAJ,CAAQ,QAAR,EAAiB,UAACC,GAAD,EAAKC,GAAL,EAAW;AACxBA,MAAIC,IAAJ,CAAS,gBAAT;AACH,CAFD;;AAIAlB,IAAImB,MAAJ,CAAWnB,IAAIe,GAAJ,CAAQ,MAAR,CAAX,EAA2B,YAAK;AAC5BnB,UAAQC,GAAR,gCAAyCG,IAAIe,GAAJ,CAAQ,MAAR,CAAzC;AACH,CAFD","file":"index.js","sourcesContent":["import \"@babel/polyfill\";\nimport express from 'express'\nimport morgan from 'morgan'\nimport cors from 'cors'\nimport path from 'path'\nimport mongoose from 'mongoose'\nimport routes from './routes'\n\n/**\n * Mongodb Connection\n * \n*/\nmongoose.Promise = global.Promise\nconst dbURL = 'mongodb+srv://admin:admin@cluster0.0r1vk.mongodb.net/sistemafacturaciondb?retryWrites=true&w=majority'\nmongoose.connect(dbURL, {useNewUrlParser: true, useUnifiedTopology: true})\n        .then(()=>console.log(\"Connected to Mongodb on port 27017...\"))\n        .catch(console.error)\n\nconst app = express()\n\n/**\n * Use Definitions\n * \n */\napp.use(morgan('dev'))\napp.use(cors())\napp.use(express.json())\napp.use(express.urlencoded({extended:true}))\napp.use(express.static(path.join(__dirname,'public')))\n\n/**\n * Set Definitions\n */\napp.set('port',process.env.PORT || 3000)\n\n/**\n * Routes\n * \n*/\napp.use('/api',routes)\n/**\n * TODO Controller\n * \n*/\napp.get('/hello',(req,res)=>{\n    res.send(\"Hello World...\")\n})\n\napp.listen(app.get('port'),()=> {\n    console.log(`Server is running on port ${app.get('port')}`)\n})"]}